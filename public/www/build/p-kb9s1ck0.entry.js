import{r as t,c as o,g as s}from"./p-bdbc0325.js";import"./p-20de5b5b.js";import{A as r}from"./p-454f1ce0.js";const n=class{constructor(s){t(this,s),this.readyEventEmitter=o(this,"ready",7)}componentWillLoad(){this.passMutation()}onPropsChange(){this.passMutation()}async passMutation(){if(!this.client)throw new Error("You should wrap your parent component with apollo-provider custom element or ApolloProvider functional component");this.mutationFn=t=>this.client.mutate(Object.assign({mutation:this.mutation,variables:this.variables},this.options,t)),this.readyEventEmitter.emit(this.mutationFn)}render(){return this.renderer&&this.renderer(this.mutationFn)}get el(){return s(this)}static get watchers(){return{client:["onPropsChange"],mutation:["onPropsChange"],variables:["onPropsChange"],renderer:["onPropsChange"],options:["onPropsChange"]}}};r.injectProps(n,["client"]);export{n as apollo_mutation};