import{r as t,c as s,g as o}from"./p-bdbc0325.js";import"./p-20de5b5b.js";import{A as i}from"./p-454f1ce0.js";const r=class{constructor(o){t(this,o),this.readyEventEmitter=s(this,"ready",7),this.resultEventEmitter=s(this,"result",7)}componentWillLoad(){this.result={data:void 0,errors:[],loading:!0,networkStatus:void 0,stale:void 0},this.startSubscription()}onPropsChange(){this.stopSubscription(),this.startSubscription()}componentDidUnload(){this.stopSubscription()}startSubscription(){if(!this.client)throw new Error("You should wrap your parent component with apollo-provider custom element or ApolloProvider functional component");this._subscription=this.client.subscribe(Object.assign({query:this.subscription,variables:this.variables},this.options)).subscribe(t=>{this.result=t,this.resultEventEmitter.emit(this.result)}),this.readyEventEmitter.emit(this.result)}stopSubscription(){this._subscription&&this._subscription.unsubscribe()}render(){return this.renderer&&this.renderer(this.result)}get el(){return o(this)}static get watchers(){return{client:["onPropsChange"],subscription:["onPropsChange"],variables:["onPropsChange"],renderer:["onPropsChange"],options:["onPropsChange"]}}};i.injectProps(r,["client"]);export{r as apollo_subscription};